name: 'test-on-pr'
on: [pull_request]

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VCPKG_FEATURE_FLAGS: dependencygraph
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: install Rust @nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: install dependencies (ubuntu only)
        # consult https://packages.ubuntu.com/
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libglib2.0-0 libglib2.0-dev libglib2.0-dev-bin libsoup-3.0-dev libavahi-gobject0 libavahi-gobject-dev libwebkit2gtk-4.1-dev libjavascriptcoregtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install dependencies (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          # cd c:\
          # rm ./vcpkg -r -fo
          # Add vcpkg and use it to add libxml2 for x64
          # git clone https://github.com/microsoft/vcpkg
          # .\vcpkg\bootstrap-vcpkg.bat
          # setx /M PATH "%PATH%;c:\vcpkg"
          # setx VCPKGRS_DYNAMIC "1" /M
          # refreshenv
          # cd c:\
          # vcpkg install libxml2:x64-windows
          vcpkg install libxml2
          vcpkg integrate install
          # I want to see all the env variables
          Get-ChildItem Env:
          # I want to see specific env variables that I expect
          Get-Item -Path Env:\PSModulePath*
          Get-Item -Path Env:\VCPKG_ROOT*
          Get-Item -Path Env:\VCPKG_INSTALLED_ROOT*
          # Show installed vcpkg packages
          vcpkg list
          # Show directory at end
          pwd
      - name: install Tauri CLI
        run: yarn global add typescript @tauri-apps/cli # because not root
      - name: install frontend dependencies
        run: cd ./stories && yarn install # change this to npm or pnpm depending on which one you use
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: './stories'
